#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>
#include <sys/time.h>

#define M 1000
#define N 1000
#define K 1000

int A[M][K];
int B[K][N];
int C[M][N];

void matrix_multiply() {
  for (int i = 0; i < M; i++) {
    for (int j = 0; j < N; j++) {
      C[i][j] = 0;
      for (int k = 0; k < K; k++) {
        C[i][j] += A[i][k] * B[k][j];
      }
    }
  }
}

int main() {
  for (int i = 0; i < M; i++) {
    for (int j = 0; j < K; j++) {
      A[i][j] = rand() % 100;
    }
  }
  for (int i = 0; i < K; i++) {
    for (int j = 0; j < N; j++) {
      B[i][j] = rand() % 100;
    }
  }

  struct timeval start_time, end_time;
  gettimeofday(&start_time, NULL);

  matrix_multiply();

  gettimeofday(&end_time, NULL);
  double elapsed_time = (double) (end_time.tv_sec - start_time.tv_sec) + (double) (end_time.tv_usec - start_time.tv_usec) / 1000000.0;
  printf("Sequential elapsed time: %f seconds\n", elapsed_time);

  // Print the first element of the result matrix to check correctness
  printf("C[0][0] = %d\n", C[0][0]);

  return 0;
}
